import logging
import os
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, WebAppInfo
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes
from config import BOT_TOKEN, BOT_NAME, BOT_DESCRIPTION

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

class SosalWebBot:
    def __init__(self):
        # –û—Ç—Ä–∏–º—É—î–º–æ URL –∑ –∫–æ–Ω—Ñ—ñ–≥—É –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
        try:
            from config import WEB_APP_URL
            self.web_app_url = WEB_APP_URL
        except ImportError:
            # –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ ngrok URL (–ø–æ—Ç—Ä—ñ–±–Ω–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞—Ç–∏)
            self.web_app_url = "https://your-ngrok-url.ngrok.io/web_app.html"
    
    async def start(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /start"""
        welcome_text = f"""
üîÆ **–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ –¥–æ {BOT_NAME}!** üîÆ

{BOT_DESCRIPTION}

**–Ø–∫ –≥—Ä–∞—Ç–∏:**
1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä"
2. –í –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–°–ø–∏—Ç–∞—Ç–∏ Sosal"
3. –û—Ç—Ä–∏–º–∞–π—Ç–µ –º–∞–≥—ñ—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å!

**–ö–æ–º–∞–Ω–¥–∏:**
/start - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
/help - –î–æ–≤—ñ–¥–∫–∞
        """
        
        # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–Ω–æ–ø–∫—É –∑ Web App
        keyboard = [
            [InlineKeyboardButton(
                "üîÆ –í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä", 
                web_app=WebAppInfo(url=self.web_app_url)
            )],
            [InlineKeyboardButton("‚ùì –î–æ–≤—ñ–¥–∫–∞", callback_data="help")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(welcome_text, parse_mode='Markdown', reply_markup=reply_markup)
    
    async def help_command(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /help"""
        help_text = f"""
üìö **–î–æ–≤—ñ–¥–∫–∞ –ø–æ {BOT_NAME}**

**–Ø–∫ –≥—Ä–∞—Ç–∏:**
1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä"
2. –í –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–°–ø–∏—Ç–∞—Ç–∏ Sosal"
3. –û—Ç—Ä–∏–º–∞–π—Ç–µ –º–∞–≥—ñ—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å!

**–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:**
‚Ä¢ –ö—Ä–∞—Å–∏–≤–∏–π –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ –ê–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ –µ—Ñ–µ–∫—Ç–∏
‚Ä¢ –†–∞–Ω–¥–æ–º–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
‚Ä¢ –ú–æ–∂–Ω–∞ –≥—Ä–∞—Ç–∏ –∑–Ω–æ–≤—É

**–ö–æ–º–∞–Ω–¥–∏:**
/start - –ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é
/help - –¶—è –¥–æ–≤—ñ–¥–∫–∞

üéØ **–ì–∞—Ä–Ω–æ—ó –≥—Ä–∏!**
        """
        
        keyboard = [
            [InlineKeyboardButton(
                "üîÆ –í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä", 
                web_app=WebAppInfo(url=self.web_app_url)
            )]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await update.message.reply_text(help_text, parse_mode='Markdown', reply_markup=reply_markup)
    
    async def handle_callback(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –Ω–∞—Ç–∏—Å–∫–∞–Ω—å –Ω–∞ –∫–Ω–æ–ø–∫–∏"""
        query = update.callback_query
        await query.answer()
        
        if query.data == "help":
            help_text = f"""
üìö **–î–æ–≤—ñ–¥–∫–∞ –ø–æ {BOT_NAME}**

**–Ø–∫ –≥—Ä–∞—Ç–∏:**
1. –ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä"
2. –í –≤–µ–±-–¥–æ–¥–∞—Ç–∫—É –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å "–°–ø–∏—Ç–∞—Ç–∏ Sosal"
3. –û—Ç—Ä–∏–º–∞–π—Ç–µ –º–∞–≥—ñ—á–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å!

**–û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ:**
‚Ä¢ –ö—Ä–∞—Å–∏–≤–∏–π –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
‚Ä¢ –ê–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ –µ—Ñ–µ–∫—Ç–∏
‚Ä¢ –†–∞–Ω–¥–æ–º–Ω—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ
‚Ä¢ –ú–æ–∂–Ω–∞ –≥—Ä–∞—Ç–∏ –∑–Ω–æ–≤—É

üéØ **–ì–∞—Ä–Ω–æ—ó –≥—Ä–∏!**
            """
            
            keyboard = [
                [InlineKeyboardButton(
                    "üîÆ –í—ñ–¥–∫—Ä–∏—Ç–∏ Sosal –º–µ—Ç—Ä", 
                    web_app=WebAppInfo(url=self.web_app_url)
                )]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await query.edit_message_text(help_text, parse_mode='Markdown', reply_markup=reply_markup)
    
    async def error_handler(self, update: Update, context: ContextTypes.DEFAULT_TYPE):
        """–û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫"""
        logger.error(f"Update {update} caused error {context.error}")
        if update and update.effective_message:
            await update.effective_message.reply_text(
                "‚ùå –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–±—Ä–æ–±—Ü—ñ –∑–∞–ø–∏—Ç—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑."
            )

def main():
    """–ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è –¥–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞"""
    if BOT_TOKEN == 'YOUR_BOT_TOKEN_HERE':
        print("‚ùå –ü–æ–º–∏–ª–∫–∞: –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å BOT_TOKEN –≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –≤ config.py")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
    sosal_bot = SosalWebBot()
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –¥–æ–¥–∞—Ç–æ–∫
    application = Application.builder().token(BOT_TOKEN).build()
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫–∏
    application.add_handler(CommandHandler("start", sosal_bot.start))
    application.add_handler(CommandHandler("help", sosal_bot.help_command))
    application.add_handler(CallbackQueryHandler(sosal_bot.handle_callback))
    
    # –î–æ–¥–∞—î–º–æ –æ–±—Ä–æ–±–Ω–∏–∫ –ø–æ–º–∏–ª–æ–∫
    application.add_error_handler(sosal_bot.error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞—î–º–æ –±–æ—Ç–∞
    print(f"üîÆ –ó–∞–ø—É—Å–∫ {BOT_NAME} –∑ –≤–µ–±-—ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å–æ–º...")
    application.run_polling()

if __name__ == '__main__':
    main()
