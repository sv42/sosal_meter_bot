#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Sosal –º–µ—Ç—Ä Web App
"""

import http.server
import socketserver
import webbrowser
import os
import threading
import time

class CustomHTTPRequestHandler(http.server.SimpleHTTPRequestHandler):
    def end_headers(self):
        # –î–æ–¥–∞—î–º–æ CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è Telegram Web App
        self.send_header('Access-Control-Allow-Origin', '*')
        self.send_header('Access-Control-Allow-Methods', 'GET, POST, OPTIONS')
        self.send_header('Access-Control-Allow-Headers', 'Content-Type')
        super().end_headers()

def start_web_server(port=8000):
    """–ó–∞–ø—É—Å–∫–∞—î –ª–æ–∫–∞–ª—å–Ω–∏–π –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"""
    try:
        with socketserver.TCPServer(("", port), CustomHTTPRequestHandler) as httpd:
            print(f"üåê –í–µ–±-—Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–æ –Ω–∞ http://localhost:{port}")
            print(f"üì± Web App URL: http://localhost:{port}/web_app.html")
            httpd.serve_forever()
    except OSError as e:
        if e.errno == 98:  # Address already in use
            print(f"‚ùå –ü–æ—Ä—Ç {port} –∑–∞–π–Ω—è—Ç–æ. –°–ø—Ä–æ–±—É—î–º–æ –ø–æ—Ä—Ç {port + 1}")
            start_web_server(port + 1)
        else:
            print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø—É—Å–∫—É —Å–µ—Ä–≤–µ—Ä–∞: {e}")

if __name__ == '__main__':
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Sosal –º–µ—Ç—Ä...")
    start_web_server()

